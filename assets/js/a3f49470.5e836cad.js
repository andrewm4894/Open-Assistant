"use strict";(self.webpackChunkopen_assistant=self.webpackChunkopen_assistant||[]).push([[168],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(a),u=o,h=m["".concat(p,".").concat(u)]||m[u]||c[u]||r;return a?n.createElement(h,i(i({ref:t},d),{},{components:a})):n.createElement(h,i({ref:t},d))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5117:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=a(7462),o=(a(7294),a(3905));const r={},i="Datasets",s={unversionedId:"data/datasets",id:"data/datasets",title:"Datasets",description:"The datasets for this project are currently hosted as loading scripts on the",source:"@site/docs/data/datasets.md",sourceDirName:"data",slug:"/data/datasets",permalink:"/Open-Assistant/docs/data/datasets",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Data Schemas",permalink:"/Open-Assistant/docs/data/schemas"},next:{title:"Data Augmentation",permalink:"/Open-Assistant/docs/data/augmentation"}},p={},l=[{value:"Adding a new dataset",id:"adding-a-new-dataset",level:2},{value:"0. Pre-Requisites",id:"0-pre-requisites",level:3},{value:"1. <strong>Fork the OpenAssistant repository</strong>",id:"1-fork-the-openassistant-repository",level:3}],d={toc:l};function m(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"datasets"},"Datasets"),(0,o.kt)("p",null,"The datasets for this project are currently hosted as loading scripts on the\n",(0,o.kt)("a",{parentName:"p",href:"https://huggingface.co/OpenAssistant"},"Open-Assistant organization")," the Hugging\nFace Hub. Each of them can be loaded by first installing the \ud83e\udd17 Datasets\nlibrary:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python -m pip install datasets\n")),(0,o.kt)("p",null,"and then running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from datasets import load_dataset\n\ndataset = load_dataset("OpenAssistant/{dataset-name}")\n')),(0,o.kt)("p",null,"We use this GitHub repository to accept new submissions and standardize quality\ncontrol. See the instructions below if you'd like to contribute a new dataset to\nthe project."),(0,o.kt)("h2",{id:"adding-a-new-dataset"},"Adding a new dataset"),(0,o.kt)("h3",{id:"0-pre-requisites"},"0. Pre-Requisites"),(0,o.kt)("p",null,"Install Git and create a GitHub account prior to implementing a dataset; you can\nfollow instructions to install Git\n",(0,o.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"},"here"),"."),(0,o.kt)("p",null,"You will also need at least Python 3.8+. If you are installing Python, we\nrecommend downloading\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.anaconda.com/anaconda/install/index.html"},"Anaconda")," to curate a\npython environment with necessary packages. ",(0,o.kt)("strong",{parentName:"p"},"We strongly recommend Python 3.8+\nfor stability"),"."),(0,o.kt)("h3",{id:"1-fork-the-openassistant-repository"},"1. ",(0,o.kt)("strong",{parentName:"h3"},"Fork the OpenAssistant repository")),(0,o.kt)("p",null,"Fork the\n",(0,o.kt)("inlineCode",{parentName:"p"},"OpenAssistant"),(0,o.kt)("a",{parentName:"p",href:"https://github.com/LAION-AI/Open-Assistant"},"repository"),'. To do\nthis, click the link to the repository and click "Fork" in the upper-right\ncorner. You should get an option to fork to your account, provided you are\nsigned into Github.'),(0,o.kt)("p",null,"After you fork, clone the repository locally. You can do so as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:<your_github_username>/OpenAssistant.git\ncd OpenAssistant  # enter the directory\n")),(0,o.kt)("p",null,"Next, you want to set your ",(0,o.kt)("inlineCode",{parentName:"p"},"upstream")," location to enable you to push/pull (add\nor receive updates). You can do so as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add upstream git@github.com:LAION-AI/Open-Assistant.git\n")),(0,o.kt)("p",null,"You can optionally check that this was set properly by running the following\ncommand:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git remote -v\n")),(0,o.kt)("p",null,"The output of this command should look as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"origin  git@github.com:<your_github_username>/Open-Assistant.git (fetch)\norigin  git@github.com:<your_github_username>/Open-Assistant.git (push)\nupstream        git@github.com:LAION-AI/Open-Assistant.git (fetch)\nupstream        git@github.com:LAION-AI/Open-Assistant.git (push)\n")),(0,o.kt)("p",null,"If you do NOT have an ",(0,o.kt)("inlineCode",{parentName:"p"},"origin")," for whatever reason, then run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add origin git@github.com:<your_github_username>/OpenAssistant.git\n")),(0,o.kt)("p",null,"The goal of ",(0,o.kt)("inlineCode",{parentName:"p"},"upstream")," is to keep your repository up-to-date to any changes that\nare made officially to the OpenAssistant repo. You can do this as follows by\nrunning the following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git fetch upstream\ngit pull\n")),(0,o.kt)("p",null,"Provided you have no ",(0,o.kt)("em",{parentName:"p"},"merge conflicts"),", this will ensure the repo stays\nup-to-date as you make changes. However, before you make changes, you should\nmake a custom branch to implement your changes."),(0,o.kt)("p",null,"You can make a new branch as such:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git checkout -b <dataset_name>\n")),(0,o.kt)("admonition",{title:"Please do not make changes on the master branch! :::",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Always make sure you're on the right branch with the following command:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"git branch\n")),(0,o.kt)("p",{parentName:"admonition"},"The correct branch will have a asterisk ","*"," in front of it."),(0,o.kt)("h3",{parentName:"admonition",id:"2-create-a-development-environment"},"2. ",(0,o.kt)("strong",{parentName:"h3"},"Create a development environment")),(0,o.kt)("p",{parentName:"admonition"},"You can make an environment in any way you choose to. We highlight two possible\noptions:"),(0,o.kt)("h4",{parentName:"admonition",id:"2a-create-a-conda-environment"},"2a) Create a conda environment"),(0,o.kt)("p",{parentName:"admonition"},"The following instructions will create an Anaconda ",(0,o.kt)("inlineCode",{parentName:"p"},"openassistant")," environment."),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Install ",(0,o.kt)("a",{parentName:"li",href:"https://docs.anaconda.com/anaconda/install/"},"anaconda")," for your\nappropriate operating system."),(0,o.kt)("li",{parentName:"ul"},"Run the following command while in the ",(0,o.kt)("inlineCode",{parentName:"li"},"biomedical")," folder (you can pick your\npython version):")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"conda create -n openassistant python=3.8  # Creates a conda env\nconda activate openassistant  # Activate your conda environment\ncd openassistant\npip install -r dev-requirements.txt # Install this while in the openassistant folder\n")),(0,o.kt)("p",{parentName:"admonition"},"You can deactivate your environment at any time by either exiting your terminal\nor using ",(0,o.kt)("inlineCode",{parentName:"p"},"conda deactivate"),"."),(0,o.kt)("h4",{parentName:"admonition",id:"2b-create-a-venv-environment"},"2b) Create a venv environment"),(0,o.kt)("p",{parentName:"admonition"},"Python 3.3+ has venv automatically installed; official information is found\n",(0,o.kt)("a",{parentName:"p",href:"https://packaging.python.org/en/latest/guides/installing-using-pip-and-virtual-environments/"},"here"),"."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"python3 -m venv <your_env_name_here>\nsource <your_env_name_here>/bin/activate  # activate environment\ncd openassistant\npip install -r dev-requirements.txt # Install this while in the openassistant folder\n")),(0,o.kt)("p",{parentName:"admonition"},"Make sure your ",(0,o.kt)("inlineCode",{parentName:"p"},"pip")," package points to your environment's source."),(0,o.kt)("h3",{parentName:"admonition",id:"3-prepare-a-folder-in-datasets-for-your-dataloader"},"3. Prepare a folder in ",(0,o.kt)("inlineCode",{parentName:"h3"},"datasets")," for your dataloader"),(0,o.kt)("p",{parentName:"admonition"},"Make a new directory within the ",(0,o.kt)("inlineCode",{parentName:"p"},"openassistant/datasets")," directory:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir openassistant/datasets/<dataset_name>\n")),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"NOTE"),": Please use snake_case, i.e. lowercase letters and underscores when\nchoosing a ",(0,o.kt)("inlineCode",{parentName:"p"},"<dataset_name>"),"."),(0,o.kt)("p",{parentName:"admonition"},"Add an ",(0,o.kt)("inlineCode",{parentName:"p"},"__init__.py")," file to this directory:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"touch openassistant/datasets/<dataset_name>/__init__.py\n")),(0,o.kt)("p",{parentName:"admonition"},"Next, copy the ",(0,o.kt)("inlineCode",{parentName:"p"},"template.py")," script and ",(0,o.kt)("inlineCode",{parentName:"p"},"hub.py")," module of ",(0,o.kt)("inlineCode",{parentName:"p"},"templates")," into your\ndataset folder. The ",(0,o.kt)("inlineCode",{parentName:"p"},"template.py"),' script has "TODOs" to fill in for your\ndataloading script:'),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp templates/hub.py openassistant/datasets/<dataset_name>/\ncp templates/template.py openassistant/datasets/<dataset_name>/<dataset_name>.py\n")),(0,o.kt)("h4",{parentName:"admonition",id:"optional-prepare-local-dataset-files"},"(Optional) Prepare local dataset files"),(0,o.kt)("p",{parentName:"admonition"},"If your dataset files aren't publicly available via URLs (e.g. because you\nimplemented a web scraper), you'll need to implement some extra logic to store\nand prepare the data locally prior to implementing a loading script in \ud83e\udd17\nDatasets."),(0,o.kt)("p",{parentName:"admonition"},"To do so, first copy the template script for dataset creation:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp templates/prepare.py openassistant/datasets/<dataset_name>/\n")),(0,o.kt)("p",{parentName:"admonition"},"Next, implement any logic that is needed to prepare a local version of the\ndataset files (by convention we store them in ",(0,o.kt)("inlineCode",{parentName:"p"},"datasets/<dataset_name>/data/"),").\nAdd any extra depen")))}m.isMDXComponent=!0}}]);